openapi: "3.0.0"
info:
  version: 1.0.0
  title: Pikerando API
paths:
  /orders:
    get:
      summary: List all orders
      operationId: listOrders
      tags:
        - orders
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of orders
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderTo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorTo"
    post:
      summary: Create an order
      operationId: createOrder
      tags:
        - orders
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorTo"
  /orders/{orderId}:
    get:
      summary: Info for a specific order
      operationId: showOrderById
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderTo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorTo"
    delete:
      summary: Deletes a single order based on the ID supplied
      operationId: deleteOrder
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          description: The id of the order to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Order deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorTo'
  /orders/{orderId}/items:
    post:
      summary: Create an item
      operationId: createIteam
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorTo"
  /orders/{orderId}/items/{itemId}:
    delete:
      summary: Deletes a single item based on the ID supplied
      operationId: deleteItem
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
        - name: itemId
          in: path
          description: The id of the item to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Item deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorTo'
  /restaurants:
    get:
      summary: List all restaurants
      operationId: listRestaurants
      tags:
        - restaurants
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of orders
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RestaurantTo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorTo"
  /restaurants/{restaurantId}:
    get:
      summary: Info for a specific restaurant
      operationId: showRestaurantById
      tags:
        - restaurants
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: The id of the restaurant to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantTo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorTo"
components:
  schemas:
    OrderTo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        restaurantId:
          type: integer
          format: int64
        creator:
          type: string
        status:
          type: string
          enum:
            - open
            - closed
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemTo"
    ItemTo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creator:
          type: string
    RestaurantTo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        menu:
          type: array
          items:
            $ref: "#/components/schemas/DishTo"
    DishTo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ErrorTo:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string